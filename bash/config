#!bin/bash

function restart_blackhole {
  sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod
}

function show_history {
  history |
  awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' |
  sort -rn |
  head
}

function edit_alias() {
  EADIR="$( dirname "$SOURCE" )"
  nvim -f "$EADIR/dev/dotfiles/bash/aliases" && . $EADIR/dev/dotfiles/bash/aliases
}

export MARKPATH=$HOME/.marks
function jump {
    cd -P $MARKPATH/$1 2>/dev/null || echo "No such mark: $1"
}
function mark {
    mkdir -p $MARKPATH; ln -s $(pwd) $MARKPATH/$1
}
function unmark {
    rm -i $MARKPATH/$1
}
function marks {
    ls -l $MARKPATH | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\ -/g' && echo
}

SSH_ENV="$HOME/.ssh/environment"
function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
# just for macos, we don't care
eval $(ssh-agent)
ssh-add --apple-use-keychain ~/.ssh/id_rsa

function play {
  # Skip DASH manifest for speed purposes. This might actually disable
  # being able to specify things like 'bestaudio' as the requested format,
  # but try anyway.
  # Get the best audio that isn't WebM, because afplay doesn't support it.
  # Use "$*" so that quoting the requested song isn't necessary.
  youtube-dl --default-search=ytsearch: \
                              --youtube-skip-dash-manifest \
                              --output="${TMPDIR:-/tmp/}%(title)s-%(id)s.%(ext)s" \
                              --restrict-filenames \
                              --format="bestaudio[ext!=webm]" \
                              --exec=afplay "$*"
}

function mp3 {
  # Get the best audio, convert it to MP3, and save it to the current
  # directory.
  youtube-dl --default-search=ytsearch: \
                              --restrict-filenames \
                              --format=bestaudio \
                              --extract-audio \
                              --audio-format=mp3 \
                              --audio-quality=1 "$*"
}

function ruby_prompt_info {
  ruby -e "require 'colorize'; puts \" #{RUBY_VERSION.red} \""
}
